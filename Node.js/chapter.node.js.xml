<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: chapter.node.js.xml 355 2012-02-24 12:29:31Z netkiller $ -->
<chapter id="install">
	<title>Node.js 安装</title>
	<ulink url="http://nodejs.org/" />
	<section id="ubuntu">
		<title>Ubuntu</title>
		<screen>
$ sudo apt-get install nodejs
$ sudo apt-get install npm
		</screen>		
	</section>
	<section id="node9">
		<title>Ubuntu Node.js 9.x</title>
		<screen>
		<![CDATA[
curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
sudo apt-get install -y nodejs
sudo apt-get install -y build-essential	
		]]>
		</screen>
	</section>
	<section id="centos">
		<title>CentOS</title>
		<para>CentOS 8 Stream</para>
		<screen>
		<![CDATA[
dnf install -y nodejs
		]]>
		</screen>
		<para>CentOS 7</para>
		<screen>
[root@netkiller www]# yum install -y nodejs
[root@netkiller www]# node --version
v6.9.1
		</screen>
		<para>安装 cnpm</para>
		<screen>
		<![CDATA[
[root@gitlab ~]# npm config set registry https://registry.npm.taobao.org
[root@gitlab ~]# npm config get registry
https://registry.npm.taobao.org/
[root@gitlab ~]# npm install -g cnpm		
		]]>
		</screen>
	</section>
	<section>
		<title>Mac</title>
		<para>Node</para>
		<screen>
		<![CDATA[
neo@MacBook-Pro ~ % brew install node
neo@MacBook-Pro ~ % node -v
v12.1.0
		]]>
		</screen>
		<para>Node8</para>
		<screen>
		<![CDATA[
neo@MacBook-Pro ~ % brew install node@8		
		
neo@MacBook-Pro ~ % export PATH="/usr/local/opt/node@8/bin:$PATH"

neo@MacBook-Pro ~ % node -v
v8.16.0		
		]]>
		</screen>
	</section>
	&section.node.yarn.xml;
	&section.node.pm2.xml;
	<section>
		<title>Type</title>
		<section>
			<title>String</title>
			<screen>
			<![CDATA[
var a = "I want apple";
var b = "an";
var position = 6;
var output = [a.slice(0, position), b, a.slice(position)].join('');
console.log(output);

var n = "123456780";
var dot = ".";
var decimals = 4 * -1;
var output = [n.slice(0, decimals), dot, n.slice(decimals)].join('');
console.log(Number(output));
			]]>
			</screen>
		</section>
		<section>
			<title>Number</title>
			<screen>
			<![CDATA[
var number = Number("1000000");
console.log(number);
			]]>
			</screen>
		</section>
		<section>
			<title>BigNumber</title>
			<para>http://mikemcl.github.io/bignumber.js/</para>
			<programlisting>
			<![CDATA[
const BigNumber = require('bignumber.js');

// 93774367102000000000 - 378000000000000 = 93773989102000010000

x = new BigNumber(93774367102000000000);
y = new BigNumber(378000000000000);
z = x.minus(y);	
z.toString();

n = 3.456
n = new BigNumber(x)
n.toFixed(5)
n.toFixed(10)
			]]>
			</programlisting>
		</section>
	</section>
	<section>
		<title>Loop</title>
		<section id="for">
			<title>for json map</title>
			<screen>
			<![CDATA[
const contracts = {
    'EOS':'0x86fa049857e0209aa7d9e616f7eb3b3b78ecfdb0',
    'FBC':'0x0c6df9bb12b32aeec1e117936457ed83ad8a1c70',
    'USDT':''
};

for(let symbol in contracts) {  
    console.log(symbol,contracts[symbol]);  
} 			
			]]>
			</screen>
		</section>
		<section>
			<title>forEach</title>
			<screen>
			<![CDATA[
arr.forEach(function (item) {
  someFn(item);
})

elements.forEach(function(element){
  
});
			]]>
			</screen>
			<screen>
			<![CDATA[
var a = ["a", "b", "c"];
a.forEach(function(entry) {
    console.log(entry);
});			
			]]>
			</screen>
		</section>
	</section>
	<section>
		<title>数据结构</title>
		<section>
			<title>set</title>
			<screen>
			<![CDATA[
var set = new Set();  
set.add("a").add("b").add("d").add("c");  
  
for (let v of set) {  
    console.log(v);  
} 			
			]]>
			</screen>
		</section>
		<section>
			<title>map</title>
			<screen>
			<![CDATA[

var map = new Map();  
map.set("a",1).set("b",2).set(999,3);  
  
console.log("--------------------");  
for(let [k,v] of map) {  
    console.log(k,v);  
} 
			]]>
			</screen>
		</section>
	</section>
</chapter>

