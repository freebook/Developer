<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="ultralytics" ?>
	<title>Ultralytics</title>
	<section>
		<title>安装 ultralytics</title>
		<screen>
		<![CDATA[
pip install ultralytics		
		]]>
		</screen>
		<para>从 Github 安装 https://github.com/ultralytics/ultralytics</para>
		<screen>
		<![CDATA[
# Install the ultralytics package from GitHub
pip install git+https://github.com/ultralytics/ultralytics.git@main		
		]]>
		</screen>
		<section id="labelimg">
			<title>标注工具 labelimg</title>
			<para>标注工具</para>
			<screen>
			<![CDATA[
pip install labelimg		
			]]>
			</screen>
			<para></para>
			<screen>
			<![CDATA[
(venv) neo@Neo-Mac-mini medical % labelimg
2024-11-15 23:41:11.174 Python[19314:31301137] +[IMKClient subclass]: chose IMKClient_Modern		
			]]>
			</screen>
		</section>
		<section id="labelme">
			<title>labelme</title>
			<para>安装</para>
			<screen>
		<![CDATA[
pip install labelme labelme2yolo		
		]]>
			</screen>
			<para>使用方法</para>
			<screen>
			<![CDATA[
(.venv) neo@Neo-Mac-mini netkiller % labelme
			]]>
			</screen>
			<para>labelme2yolo 标注格式转换工具</para>
			<screen>
			<![CDATA[
(.venv) PS D:\workspace\netkiller> labelme2yolo --json_dir .\captcha\dataset
[2024-11-17T11:46:35Z INFO  labelme2yolo] Starting the conversion process...
[2024-11-17T11:46:35Z INFO  labelme2yolo] Read and parsed 3 JSON files.
  [Train] [00:00:00] [########################################] 2/2 (0s)                                                                                                                                                                            
  [Val] [00:00:00] [########################################] 1/1 (0s)                                                                                                                                                                              
[2024-11-17T11:46:35Z INFO  labelme2yolo] Creating dataset.yaml file...
[2024-11-17T11:46:35Z INFO  labelme2yolo] Conversion process completed successfully.
			]]>
			</screen>
			<para>labelme2yolo 转换后的数据保存在 YOLODataset 文件夹中</para>
			<screen>
		<![CDATA[
(.venv) PS D:\workspace\netkiller\captcha> labelme2yolo --json_dir datasets\train
(.venv) PS D:\workspace\netkiller\captcha> yolo task=detect mode=train model=yolov8n.pt data=.\YOLODataset\dataset.yaml epochs=30 workers=1 batch=16
		]]>
			</screen>
		</section>
		<section id="anylabeling">
			<title>anylabeling</title>
			<para>安装 anylabeling</para>
			<screen>
			<![CDATA[
pip install anylabeling			
			]]>
			</screen>
			<para>运行 anylabeling</para>
			<screen>
			<![CDATA[
anylabeling			
			]]>
			</screen>
		</section>
		<section>
			<title>环境配置</title>
			<screen>
			<![CDATA[
(.venv) neo@Neo-Mac-mini captcha % cat /Users/neo/Library/Application\ Support/Ultralytics/settings.json
{
  "settings_version": "0.0.6",
  "datasets_dir": "/Users/neo/PycharmProjects/netkiller/datasets",
  "weights_dir": "/Users/neo/PycharmProjects/netkiller/weights",
  "runs_dir": "/Users/neo/PycharmProjects/netkiller/runs",
  "uuid": "091024e8315e531396653f2ae1aa5f270aa3ead574e0f5ec04ed515ab8b85931",
  "sync": true,
  "api_key": "",
  "openai_api_key": "",
  "clearml": true,
  "comet": true,
  "dvc": true,
  "hub": true,
  "mlflow": true,
  "neptune": true,
  "raytune": true,
  "tensorboard": true,
  "wandb": false,
  "vscode_msg": true
}			
			]]>
			</screen>
			<para></para>
			<screen>
			<![CDATA[
(.venv) neo@Neo-Mac-mini captcha % vim /Users/neo/Library/Application\ Support/Ultralytics/settings.json 			
			]]>
			</screen>
		</section>
		<section>
			<title>JSON2YOLO</title>
			<para>
				<ulink url="https://github.com/ultralytics/JSON2YOLO" />
			</para>
		</section>
	</section>
	&section.ultralytics.cmd.xml;	
	&section.ultralytics.task.xml;
	&section.ultralytics.yolo.xml;

	<section>
		<title>ONNX(Open Neural Network Exchange) 开放神经网络交换格式</title>
		<para>ONNX，即开放神经网络交换格式（Open Neural Network
			Exchange），是一个可以让不同深度学习框架之间互相转换和使用模型的开放标准。它由 Facebook 和 Microsoft
			共同开发，旨在为深度学习模型的部署和迁移提供更加方便和灵活的解决方案。
		</para>
		<para>ONNX 支持包括 PyTorch、TensorFlow、CNTK 和 MXNet
			等在内的多个深度学习框架，可以将这些框架训练出的模型转换成 ONNX 格式，从而可以被其他框架或应用所使用。
		</para>
		<orderedlist>
			<title>ONNX 的主要优点包括</title>
			<listitem>
				<para>互操作性好：ONNX 支持多个深度学习框架之间的模型转换，使得它们可以互相使用和部署，从而减少了开发和部署的难度和成本；
				</para>
			</listitem>
			<listitem>
				<para>高效性能：ONNX 可以在多种硬件和软件平台上运行，并提供了 C++和 Python
					接口，可以大幅提高模型执行的效率和速度；</para>
			</listitem>
			<listitem>
				<para>易于扩展：ONNX 的架构简单清晰，可以轻松地添加新的层次和类型，方便应对不断升级变化的深度学习技术和需求。</para>
			</listitem>
		</orderedlist>
		<para>总之，ONNX 是一个方便快捷的深度学习模型转换和交换标准，可以帮助开发者更加轻松地将深度学习模型进行部署和迁移。</para>
		<programlisting>
		<![CDATA[
from ultralytics import YOLO

# Load the YOLO11 model
model = YOLO("yolo11n.pt")

# Export the model to ONNX format
model.export(format="onnx")  # creates 'yolo11n.onnx'

# Load the exported ONNX model
onnx_model = YOLO("yolo11n.onnx")

# Run inference
results = onnx_model("https://ultralytics.com/images/bus.jpg")		
		]]>
		</programlisting>


	</section>
	&section.ultralytics.utils.xml;
	&section.ultralytics.example.xml;
	<section>
		<title>FAQ</title>
		<section>
			<title>To fix this issue, refer to the "Safe importing of main module"</title>
			<para>运行训练代码提示</para>
			<screen>
			<![CDATA[
RuntimeError: 
        An attempt has been made to start a new process before the
        current process has finished its bootstrapping phase.

        This probably means that you are not using fork to start your
        child processes and you have forgotten to use the proper idiom
        in the main module:

            if __name__ == '__main__':
                freeze_support()
                ...

        The "freeze_support()" line can be omitted if the program
        is not going to be frozen to produce an executable.

        To fix this issue, refer to the "Safe importing of main module"
        section in https://docs.python.org/3/library/multiprocessing.html
			
			]]>
			</screen>
			<para>解决方案，设置参数 workers=0</para>
			<programlisting>
			<![CDATA[
from ultralytics import YOLO
# 指定模型
mode = YOLO('yolo11n-seg.pt')
# 让模型开始训练
mode.train(data='dataset.yaml',workers=0,epochs=100,batch=10)
# 验证模型
mode.val()
			]]>
			</programlisting>
		</section>
		<section>
			<title>ModuleNotFoundError: No module named 'onnx'</title>
			<screen>
			<![CDATA[
pip install onnx
			]]>
			</screen>
		</section>
	</section>
</chapter>