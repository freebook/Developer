<?xml version="1.0" encoding="UTF-8"?>
<chapter id="terminal">
	<title>终端环境开发</title>
	<section>
		<title>ansicolors</title>
	</section>
	<section>
		<title>termcolor</title>
		<programlisting>
		<![CDATA[
from termcolor import colored

# then use Termcolor for all colored text output
print(colored('Hello, World!', 'green', 'on_red'))		
		]]>
		</programlisting>
		<programlisting>
		<![CDATA[
import sys
from termcolor import colored, cprint

text = colored('Hello, World!', 'red', attrs=['reverse', 'blink'])
print(text)
cprint('Hello, World!', 'green', 'on_red')

print_red_on_cyan = lambda x: cprint(x, 'red', 'on_cyan')
print_red_on_cyan('Hello, World!')
print_red_on_cyan('Hello, Universe!')

for i in range(10):
    cprint(i, 'magenta', end=' ')

cprint("Attention!", 'red', attrs=['bold'], file=sys.stderr)		
		]]>
		</programlisting>
	</section>
	<section>
		<title>Colorama</title>
		<para>
			<ulink url="https://pypi.org/project/colorama/" />
		</para>
		<screen>
		<![CDATA[
pip install colorama
		]]>
		</screen>
		<section>
			<title>初始化操作</title>
			<para>init(autoreset = False)，当 autoreset = True 时自动恢复到默认颜色</para>
			<programlisting>
		<![CDATA[
#!/usr/bin/env python 
from colorama import init, Fore, Back, Style

if __name__ == "__main__":
 
    init(autoreset=True)    #  初始化，自动恢复到默认颜色
    print(Fore.RED + 'some red text')
    print(Back.GREEN + 'and with a green background')
    print(Style.DIM + 'and in dim text')		
		]]>
			</programlisting>
		</section>
		<section>
			<title>常用格式</title>
			<para>Fore是针对字体颜色，Back是针对字体背景颜色，Style是针对字体格式</para>
			<itemizedlist>
				<title></title>
				<listitem>Fore: BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE, RESET.</listitem>
				<listitem>Back: BLACK, RED, GREEN, YELLOW, BLUE, MAGENTA, CYAN, WHITE, RESET.</listitem>
				<listitem>Style: DIM, NORMAL, BRIGHT, RESET_ALL</listitem>
			</itemizedlist>
		</section>
	</section>
	<section>
		<title>进度条 progress</title>
		<para>CLI 和 TUI 开发中我们常常会用到进度条，用于展示下载或执行进度等等。</para>
		<screen>
		<![CDATA[
Bar |################################| 200/200 [2 / 0 / 0:00:00] (None)
ChargingBar ████████████████████████████████ 200/200 [2 / 0 / 0:00:00] (None)
FillingSquaresBar ▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣ 200/200 [2 / 0 / 0:00:00] (None)
FillingCirclesBar ◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉◉ 200/200 [2 / 0 / 0:00:00] (None)
IncrementalBar |████████████████████████████████| 100% [0:00:02 / 0 / 0:00:00]
PixelBar |⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿| 100% [0:00:02 / 0 / 0:00:00]
ShadyBar |████████████████████████████████| 100% [0:00:02 / 0 / 0:00:00]
Corolored |████████████████████████████████| 200/200
Spinner %(index)d -
PieSpinner %(index)d ◷
MoonSpinner %(index)d ◑
LineSpinner %(index)d ⎼
PixelSpinner %(index)d ⡿
Counter 100
Countdown 0  
Stack █
Pie ●
Random |██████████████████████████████▊ | 96		
		]]>
		</screen>
		<para>安装</para>
		<screen>
		<![CDATA[
pip install progress		
		]]>
		</screen>
		<para>演示</para>
		<programlisting>
		<![CDATA[
from progress.bar import Bar

bar = Bar('Processing', max=20)
for i in range(20):
    # Do some work
    bar.next()
bar.finish()
		]]>
		</programlisting>
		<para>执行结果</para>
		<programlisting>
		<![CDATA[
neo@MacBook-Pro-Neo ~/workspace/python % python3.9 progress-demo.py
Processing |################################| 20/20		
		]]>
		</programlisting>
		<section>
			<title>条形进度条（Bars）</title>
			<programlisting>
			<![CDATA[
from progress.bar import Bar
import time
import random

length = 100

bar = Bar('Processing', max=length)
for i in range(length):
    # Do some work
    time.sleep(random.randrange(1, 5)*0.05)
    bar.next()
bar.finish()			
			]]>
			</programlisting>
			<para>运行结果</para>
			<screen>
			<![CDATA[
Processing |#########                       | 31/100			
			]]>
			</screen>
			<para>将 # 换成 @ 符号，并且进度改为百分比。</para>
			<programlisting>
			<![CDATA[
bar = Bar('Loading', fill='@', suffix='%(percent)d%%')

演示

Loading |@@@@@@@@@@@@@                   | 42%			
			]]>
			</programlisting>
		</section>
		<section>
			<title>方块进度条（ChargingBar）</title>
			<programlisting>
			<![CDATA[
from progress.bar import ChargingBar
import time
import random
length = 100
with ChargingBar('Processing', max=length) as bar:
    for i in range(length):
        # Do some work
        time.sleep(random.randrange(1, 5)*0.05)
        bar.next()
			]]>
			</programlisting>
			<para>运行结果</para>
			<screen>
			<![CDATA[
Processing ███████████████████████∙∙∙∙∙∙∙∙∙ 73%			
			]]>
			</screen>
		</section>
		<section>
			<title>填充方块进度条（FillingSquaresBar）</title>
			<programlisting>
			<![CDATA[
from progress.bar import FillingSquaresBar
import time
import random
length = 100
bar = FillingSquaresBar('Processing', max=length)
for i in range(length):
    # Do some work
    time.sleep(random.randrange(1, 5)*0.05)
    bar.next()
bar.finish()			
			]]>
			</programlisting>
			<para>运行结果</para>
			<screen>
			<![CDATA[
Processing ▣▣▣▣▣▣▣▣▣▣▣▣▣▣▣▢▢▢▢▢▢▢▢▢▢▢▢▢▢▢▢▢ 47%			
			]]>
			</screen>
		</section>
		<section>
			<title>填充圆圈进度条（FillingCirclesBar）</title>
			<programlisting>
			<![CDATA[
bar = FillingCirclesBar('Processing', max=length)
for i in range(length):
    # Do some work
    time.sleep(random.randrange(1, 5)*0.05)
    bar.next()
bar.finish()			
			]]>
			</programlisting>
			<para>运行结果</para>
			<screen>
			<![CDATA[
Processing ◉◉◉◉◉◉◉◉◉◉◉◉◉◯◯◯◯◯◯◯◯◯◯◯◯◯◯◯◯◯◯◯ 41%			
			]]>
			</screen>
		</section>
		<section>
			<title>使用 Incremental 展示内存使用率</title>
			<programlisting>
			<![CDATA[
from progress.bar import IncrementalBar
import subprocess

cmd = "/usr/bin/memory_pressure | tail -n 1 | cut -d ':' -f2"
usage = 0
p = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, bufsize=64)
usage = int(p.stdout.readline().decode().replace(' ', '').replace('%', '').replace('\n', ''))
p.stdout.close()
p.wait()

length = 100
bar = IncrementalBar('Memory', max=length, suffix='%(index)d%%')
bar.goto(usage)
bar.finish()
			]]>
			</programlisting>
			<para></para>
			<screen>
			<![CDATA[
Memory |████████████████▋               | 52%			
			]]>
			</screen>
		</section>
	</section>
	<section>
		<title>tqdm</title>
	</section>
	<section>
		<title>texttable - module for creating simple ASCII tables</title>
		<para>
			<ulink url="https://github.com/foutaise/texttable/" />
		</para>
		<screen>
		<![CDATA[
pip install texttable
		]]>
		</screen>
		<para>程序演示</para>
		<programlisting>
		<![CDATA[
from texttable import Texttable

table = Texttable()
table.add_rows([["Name", "Age", "Nickname"],
                ["Neo", 35, "netkiller"],
                ["李磊", 23, "Lee"],
                ["韩美美", 28, "May"]])
print(table.draw())		
		]]>
		</programlisting>
		<para></para>
		<screen>
		<![CDATA[
+--------+-----+-----------+
|  Name  | Age | Nickname  |
+========+=====+===========+
| Neo    |  35 | netkiller |
+--------+-----+-----------+
| 李磊   |  23 |    Lee    |
+--------+-----+-----------+
| 韩美美 |  28 |    May    |
+--------+-----+-----------+		
		]]>
		</screen>
		<section>
			<title>对齐设置</title>
			<itemizedlist>
				<title>set_header_align(self, array) 设置水平对齐</title>
				<listitem>l 表示左对齐</listitem>
				<listitem>r 表示右对齐</listitem>
				<listitem>c 表示居中对齐</listitem>
			</itemizedlist>
			<itemizedlist>
				<title>set_cols_align(self, array) 设置水平对齐</title>
				<listitem>l 表示左对齐</listitem>
				<listitem>r 表示右对齐</listitem>
				<listitem>c 表示居中对齐</listitem>
			</itemizedlist>
			<itemizedlist>
				<title>set_cols_valign(self, array) 设置垂直对齐</title>
				<listitem>t 表示顶部对齐</listitem>
				<listitem>m 表示中间对齐</listitem>
				<listitem>b 表示底部对齐</listitem>
			</itemizedlist>
			<programlisting>
			<![CDATA[
from texttable import Texttable

table = Texttable()
table.set_cols_align(["l", "r", "c"])
table.set_cols_valign(["t", "m", "b"])
table.add_rows([["Name", "Age", "Nickname"],
                ["Mr\nXavier\nHuon", 32, "Xav'"],
                ["Mr\nBaptiste\nClement", 1, "Baby"],
                ["Mme\nLouise\nBourgeau", 28, "Lou\n\nLoue"]])
print(table.draw())
print()				
			]]>
			</programlisting>
			<para>输出结果</para>
			<screen>
			<![CDATA[
+----------+-----+----------+
|   Name   | Age | Nickname |
+==========+=====+==========+
| Mr       |     |          |
| Xavier   |  32 |          |
| Huon     |     |   Xav'   |
+----------+-----+----------+
| Mr       |     |          |
| Baptiste |   1 |          |
| Clement  |     |   Baby   |
+----------+-----+----------+
| Mme      |     |   Lou    |
| Louise   |  28 |          |
| Bourgeau |     |   Loue   |
+----------+-----+----------+			
			]]>
			</screen>
		</section>
		<section>
			<title>设置表格风格</title>
			<programlisting>
			<![CDATA[
from texttable import Texttable
table = Texttable()
for header in (Texttable.BORDER, Texttable.HEADER, Texttable.HLINES, Texttable.VLINES):
    table.set_deco(header)

    table.set_cols_align(["l", "r", "c"])
    table.set_cols_valign(["t", "m", "b"])
    table.add_rows([["Name", "Age", "Nickname"],
                    ["Neo", 35, "netkiller"],
                    ["李磊", 23, "Lee"],
                    ["韩美美", 28, "May"]])
    print(table.draw())
    print("\n\n")			
			]]>
			</programlisting>
			<para>输出结果</para>
			<screen>
			<![CDATA[			
+--------------------------+
|  Name    Age   Nickname  |
| Neo       35   netkiller |
| 李磊      23      Lee    |
| 韩美美    28      May    |
+--------------------------+



 Name    Age   Nickname 
========================
Neo       35   netkiller
李磊      23      Lee   
韩美美    28      May   
Neo       35   netkiller
李磊      23      Lee   
韩美美    28      May   



 Name    Age   Nickname 
Neo       35   netkiller
+--------------------------+
李磊      23      Lee   
+--------------------------+
韩美美    28      May   
+--------------------------+
Neo       35   netkiller
+--------------------------+
李磊      23      Lee   
+--------------------------+
韩美美    28      May   
+--------------------------+
Neo       35   netkiller
+--------------------------+
李磊      23      Lee   
+--------------------------+
韩美美    28      May   



 Name  | Age | Nickname 
Neo    |  35 | netkiller
李磊   |  23 |    Lee   
韩美美 |  28 |    May   
Neo    |  35 | netkiller
李磊   |  23 |    Lee   
韩美美 |  28 |    May   
Neo    |  35 | netkiller
李磊   |  23 |    Lee   
韩美美 |  28 |    May   
Neo    |  35 | netkiller
李磊   |  23 |    Lee   
韩美美 |  28 |    May   			
			]]>
			</screen>
		</section>
		<section>
			<title>自定义风格</title>
			<para>自定义行列线条字符</para>
			<screen>
			<![CDATA[
set_chars(self, array)
     |      Set the characters used to draw lines between rows and columns
     |
     |      - the array should contain 4 fields:
     |
     |          [horizontal, vertical, corner, header]
     |
     |      - default is set to:
     |
     |          ['-', '|', '+', '=']			
			]]>
			</screen>
			<itemizedlist>
				<title>set_chars(self, array) 数字的四个参数分别是：</title>
				<listitem>horizontal 水平画线字符</listitem>
				<listitem>vertical 垂直画线字符</listitem>
				<listitem>corner 转角画线字符</listitem>
				<listitem>header 表头画线字符</listitem>
			</itemizedlist>
			<para>默认是 ['-', '|', '+', '=']</para>
			<para>下面这段代码模仿 MySQL 终端输出样式</para>
			<programlisting>
			<![CDATA[
table = Texttable()
table.set_cols_align(["r", "l", "c", "l", "l"])
table.set_cols_valign(["m", "m", "m", "m", "m"])
table.set_chars(['-', '|', '+', '-'])
table.set_cols_dtype(['i', 't', 'i', 't', 'a'])
table.add_rows([["id", "name", "age", "nickname", "ctime"],
                [1, "Neo", 35, "netkiller", "2021-05-16 10:14:00"],
                [2, "Tom", 23, "Lee", "2021-05-16 10:14:00"],
                [3, "Jerry", 28, "May", "2021-05-16 10:14:00"]])
print(table.draw())
print()			
			]]>
			</programlisting>
			<screen>
			<![CDATA[
+----+-------+-----+-----------+---------------------+
| id | name  | age | nickname  |        ctime        |
+----+-------+-----+-----------+---------------------+
|  1 | Neo   | 35  | netkiller | 2021-05-16 10:14:00 |
+----+-------+-----+-----------+---------------------+
|  2 | Tom   | 23  | Lee       | 2021-05-16 10:14:00 |
+----+-------+-----+-----------+---------------------+
|  3 | Jerry | 28  | May       | 2021-05-16 10:14:00 |
+----+-------+-----+-----------+---------------------+			
			]]>
			</screen>
			<para>怎么样，似曾相识吧？跟 mysql 命令中输出结果一致。</para>
		</section>
		<section>
			<title>设置列数据类型</title>
			<programlisting>
			<![CDATA[
from texttable import Texttable
table = Texttable()
table.set_deco(Texttable.HEADER)
table.set_cols_dtype(['t',  # text
                      'f',  # float (decimal)
                      'e',  # float (exponent)
                      'i',  # integer
                      'a'])  # automatic
table.set_cols_align(["l", "r", "r", "r", "l"])
table.add_rows([["text",    "float", "exp", "int", "auto"],
                ["abcd",    "67",    654,   89,    128.001],
                ["efghijk", 67.5434, .654,  89.6,
                 12800000000000000000000.00023],
                ["lmn",     5e-78,   5e-78, 89.4,  .000000000000128],
                ["opqrstu", .023,    5e+78, 92.,   12800000000000000000000]])
print(table.draw())			
			]]>
			</programlisting>
			<para>输出结果</para>
			<screen>
			<![CDATA[
 text     float       exp      int     auto   
==============================================
abcd      67.000   6.540e+02    89   128.001  
efghijk   67.543   6.540e-01    90   1.280e+22
lmn        0.000   5.000e-78    89   0.000    
opqrstu    0.023   5.000e+78    92   1.280e+22			
			]]>
			</screen>
		</section>
		<section>
			<title>彩色表格</title>
			<para>texttable 本身不支持 ANSI 彩色文本输出，我以修复了该 Bug，已经想修复代码pull request 给作者。</para>
			<para>Pull Request: <ulink url="https://github.com/foutaise/texttable/pull/75" /></para>
			<para>我的代码库地址：<ulink> url="https://github.com/netkiller/texttable" /></ulink></para>
			<programlisting>
			<![CDATA[
from texttable import Texttable
from colorama import Fore, Back, Style, init
table = Texttable()
table.set_chars(['-', '|', '+', '-'])
# table.set_cols_width([8, 5, 19])
table.add_rows([["Name", "Age", "Nickname"],
                ["Neo", 35, Fore.RED+"netkiller"+Fore.RESET],
                ["李磊", 23, Fore.GREEN+"Lee"+Fore.RESET],
                ["韩美美", 28, Fore.BLUE+"May"+Fore.RESET]])
print(table.draw())	
			]]>
			</programlisting>
		</section>
	</section>
	<section id="tui">
		<title>TUI</title>
		<title>Widget toolkit</title>
		<section id="console">
			<title>Console</title>
			<para>http://www.effbot.org/zone/console-handbook.htm</para>
		</section>
		<section>
			<title>urwid</title>
			<ulink url="http://excess.org/urwid/" />
		</section>
		<section>
			<title>pycdk</title>
			<ulink url="http://pycdk.sourceforge.net/" />
		</section>
		<section>
			<title>python-newt - A NEWT module for Python</title>
			<ulink url="https://fedorahosted.org/newt/" />
			<screen>

			</screen>
		</section>
	</section>
</chapter>
