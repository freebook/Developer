<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="ocr" ?>
	<title>OCR</title>
	<para>OCR(Optical Character Recognition)：光学字符识别，是指电子设备（例如扫描仪或数码相机）检查纸上打印的字符，通过检测暗、亮的模式确定其形状，然后用字符识别方法将形状翻译成计算机文字的过程。</para>
	<itemizedlist>
		<title>OCR 的应用场景:</title>
		<listitem>扫描件的文字识别：纸质扫描件，PDF文件，纸书籍转电子书</listitem>
		<listitem>卡证文字识别：名片，身份证，银行卡</listitem>
		<listitem>车牌设别：多用在停车场和交警执法</listitem>
		<listitem>票据识别：报销凭证，税务票据，医疗票据</listitem>
		<listitem>教育领域：公式识别，自动判卷，自动答题	</listitem>
	</itemizedlist>
	<para>OCR 原理</para>
	<screen>
	<![CDATA[
扫描/拍照 > 图像输入 > 二值化 > 去噪声 > 倾斜校正 > 版面分析 > 字符切割 > 字符识别 > 版面恢复 > 文字校对	
	]]>
	</screen>
	<para>扫描或拍照：使用扫描仪将纸质资料扫描成图像文件，手机拍照也能达到同样效果，然后将图像文件交给OCR软件进行处理。</para>
	<para>首先把彩色图像编程黑白图像（黑色文字，白色背景），识别系统不关心颜色。</para>
	<para>通过算法去除图像中的影响因素，噪点，污染，这部叫去噪声，类似Ps中的色阶，降噪，模糊一类的操作，让图像中的文字更突出。</para>
	<para>然后矫正倾斜的图像，分析文本段落，切割字符，识别字符。</para>
	<para>将识别的字符，重新排版，生成 Text 文本文件。</para>
	<para>较为高级OCR系统，带有AI语法分析，能够实现拼写检查，语法校对等等。</para>

<section id="EasyOCR">
	<title>EasyOCR</title>
	<para>
		<ulink url="https://www.jaided.ai" />
	</para>
	<section>
		<title>安装 EasyOCR</title>
		<screen>
		<![CDATA[
pip install easyocr		
		]]>
		</screen>
		<para>EasyOCR 源码</para>
		<para>
			<ulink url="https://github.com/JaidedAI/EasyOCR" />
		</para>
		<para>安装最新版</para>
		<screen>
		<![CDATA[
pip install git+git://github.com/jaidedai/easyocr.git		
		]]>
		</screen>
	</section>
	<section>
		<title>操作演示</title>
		<programlisting>
		<![CDATA[
import easyocr

reader = easyocr.Reader(['ch_sim','en']) 
result = reader.readtext('test.jpg')

print(result)

for text in result:
    word = text[1]
    print(word)	
		]]>
		</programlisting>
	</section>
	<section>
		<title>命令行运行</title>
		<screen>
		<![CDATA[
$ easyocr -l ch_sim en -f chinese.jpg --detail=1 --gpu=True		
		]]>
		</screen>
	</section>
	<section>
		<title>函数</title>
		<section>
			<title>Reader()</title>
			<para>禁用 GPU</para>
			<programlisting>
			<![CDATA[
reader = easyocr.Reader(['ch_sim','en'], gpu = False)			
			]]>
			</programlisting>
		</section>
		<section>
			<title>readtext() 函数</title>
			<para>进输出识别结果</para>
			<programlisting>
			<![CDATA[
reader.readtext('chinese.jpg', detail = 0)
			]]>
			</programlisting>
			<para>输出结果</para>
			<screen>
			<![CDATA[
['愚园路', '西', '东', '315', '309', 'Yuyuan Rd.', 'W', 'E']
			]]>
			</screen>
		</section>
	</section>
	<section>
		<title><![CDATA[urllib.error.URLError: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:833)>]]></title>
		<para>解决方法，加入下面代码</para>
		<programlisting>
		<![CDATA[
import ssl
ssl._create_default_https_context = ssl._create_unverified_context		
		]]>
		</programlisting>
		<para>或运行</para>
		<screen>
		<![CDATA[
pip install --upgrade certifi		
		]]>
		</screen>
	</section>
</section>	
<section id="tesseract">
	<title>Tesseract</title>
	<para>Tesseract：开源的OCR识别引擎，初期Tesseract引擎由HP实验室研发，后来贡献给了开源软件业，后由Google进行改进、修改bug、优化，重新发布。</para>
	<section>
		<title>安装 Tesseract</title>
		<screen>
		<![CDATA[
neo@MacBook-Pro-Neo ~/workspace/python/ocr % brew install tesseract
neo@MacBook-Pro-Neo ~/workspace/python/ocr % brew install tesseract-lang
neo@MacBook-Pro-Neo ~/workspace/python/ocr % pip3 install pytesseract
		]]>
		</screen>
	</section>
	<section>
		<title>演示 Tesseract</title>
		<programlisting>
		<![CDATA[
#!/usr/bin/python3
# -*- coding:utf-8 -*-

from PIL import Image
import pytesseract

# 英文识别
english = pytesseract.image_to_string(Image.open("english.png"))
print(english)

print('-' * 50)

# 简体中文识别
chinese = pytesseract.image_to_string(Image.open("chinese.png"), lang='chi_sim')
print(chinese)	
		]]>
		</programlisting>
	</section>
	
</section>
</chapter>