<?xml version="1.0" encoding="UTF-8"?>
<chapter id="index"><?dbhtml dir="pandas" ?>
	<title>Pandas - Python Data Analysis Library</title>
	<subtitle>Powerful data structures for data analysis, time series, and statistics</subtitle>
	<section>
		<title>安装 pandas</title>
		<screen>
		<![CDATA[
pip install pandas		
		]]>
		</screen>
		<para>安装 modin 加速插件</para>
		<screen>
		<![CDATA[
pip install modin[dask]		
		]]>
		</screen>
		<para>modin 的用法是将：</para>
		<screen>
		<![CDATA[
import pandas as pd
改为
import modin.pandas as pd		
		]]>
		</screen>
	</section>
	<section>
		<title>数据输入与输出</title>
		<para>我们都知道 Pandas 是做数据分析的，Pandas 在做数据分析之前需要加载数据，加载数据的方法有很多种，数据来源渠道也很多。例如数据可以从 HTML页面中的表格，Excel，JSON，CSV以及关系型数据库等等。</para>
		&section.pandas.html.xml;
		&section.pandas.excel.xml;
		&section.pandas.sql.xml;
	</section>
	<section>
		<title>DataFrame</title>
		<section>
			<title>筛选</title>
			<programlisting>
			<![CDATA[
#!/usr/bin/python3
# -*- coding: UTF-8 -*-
import pandas as pd

file_path = r'团购.xlsx'
df = pd.read_excel(file_path, sheet_name="3月2日",
                   header=1, usecols=['房号', '客户名', '合计'])
data = df[2:-3]
print(data)
print(data[data['合计'] > 0])			
			]]>
			</programlisting>
			<screen>
			<![CDATA[
       房号 客户名   合计
2    7-6A  李松   25
3    7-8A  王雪   68
4    7-9A  梁梅  100
5   7-10A  宋森   21
6   9-27B  蓝天   20
7   9-28B  赵岚    0
8   9-30B  皮思   50
9   1-20B  龚风  256
10  1-24A  阮纵    0
			]]>
			</screen>
			<para>筛选后</para>
			<screen>
			<![CDATA[
      房号 客户名   合计
2   7-6A  李松   25
3   7-8A  王雪   68
4   7-9A  梁梅  100
5  7-10A  宋森   21
6  9-27B  蓝天   20
8  9-30B  皮思   50
9  1-20B  龚风  256			
			]]>
			</screen>
		</section>
		<section>
			<title>删除</title>
			<programlisting>
			<![CDATA[
del df['new_col']			
			]]>
			</programlisting>
		</section>
		<section>
			<title>排序</title>
			<programlisting>
			<![CDATA[
#!/usr/bin/python3
# -*- coding: UTF-8 -*-
import numpy as np
import pandas as pd

df = pd.DataFrame({'数值': np.random.randint(1, 10, size=8)})
print(("-" * 10) + "随机数" + ("-" * 10))
print(df)
print(("-" * 10) + "排序后" + ("-" * 10))
print(df.sort_values('数值'))
print(("-" * 10) + "降序排序" + ("-" * 10))
print(df.sort_values('数值', ascending=False))			
			]]>
			</programlisting>
			<para>运行结果</para>
			<screen>
			<![CDATA[
----------随机数----------
   数值
0   5
1   9
2   1
3   6
4   2
5   5
6   3
7   4
----------排序后----------
   数值
2   1
4   2
6   3
7   4
0   5
5   5
3   6
1   9
----------降序排序----------
   数值
1   9
3   6
0   5
5   5
7   4
6   3
4   2
2   1			
			]]>
			</screen>
			<para>多列排序</para>
			<programlisting>
			<![CDATA[
#!/usr/bin/python3
# -*- coding: UTF-8 -*-
import numpy as np
import pandas as pd

df = pd.DataFrame({'A': np.random.randint(1, 10, size=8), 'B': np.random.randint(
    1, 10, size=8), 'C': np.random.randint(1, 10, size=8)})
print(("-" * 10) + "随机数" + ("-" * 10))
print(df)
print(("-" * 10) + "B列排序" + ("-" * 10))
print(df.sort_values('B'))
print(("-" * 10) + "A降序,B升序" + ("-" * 10))
print(df.sort_values(['A', 'B'], ascending=[False, True]))
print(("-" * 10) + "横向排序(行排序)" + ("-" * 10))
print(df.sort_values(by=0, axis=1, ascending=False))
			
			]]>
			</programlisting>
			<para>运行结果</para>
			<screen>
			<![CDATA[
----------随机数----------
   A  B  C
0  3  2  7
1  4  8  1
2  3  8  6
3  2  4  2
4  7  9  2
5  7  9  4
6  4  1  8
7  9  4  4
----------B列排序----------
   A  B  C
6  4  1  8
0  3  2  7
3  2  4  2
7  9  4  4
1  4  8  1
2  3  8  6
4  7  9  2
5  7  9  4
----------A降序,B升序----------
   A  B  C
7  9  4  4
4  7  9  2
5  7  9  4
6  4  1  8
1  4  8  1
0  3  2  7
2  3  8  6
3  2  4  2
----------横向排序(行排序)----------
   C  A  B
0  7  3  2
1  1  4  8
2  6  3  8
3  2  2  4
4  2  7  9
5  4  7  9
6  8  4  1
7  4  9  4			
			]]>
			</screen>
			<para>标签排序</para>
			<programlisting>
			<![CDATA[
#!/usr/bin/python3
# -*- coding: UTF-8 -*-
import numpy as np
import pandas as pd

df = pd.DataFrame({'B': np.random.randint(1, 10, size=5), 'A': np.random.randint(
    1, 10, size=5), 'C': np.random.randint(1, 10, size=5)}, index=np.random.randint(1, 5, size=5))
print(("-" * 10) + "随机数" + ("-" * 10))
print(df)
print(("-" * 10) + "行标签排序后" + ("-" * 10))
print(df.sort_index())
print(("-" * 10) + "列标签排序后" + ("-" * 10))
print(df.sort_index(axis=1))			
			]]>
			</programlisting>
			<para>运行结果</para>
			<screen>
			<![CDATA[
neo@MacBook-Pro-Neo ~/workspace/python/pandas % python3.9 /Users/neo/workspace/python/pandas/dataframe/index.py
----------随机数----------
   B  A  C
4  9  2  1
4  1  1  5
4  1  4  5
3  8  4  7
2  3  1  6
----------行标签排序后----------
   B  A  C
2  3  1  6
3  8  4  7
4  9  2  1
4  1  1  5
4  1  4  5
----------列标签排序后----------
   A  B  C
4  2  9  1
4  1  1  5
4  4  1  5
3  4  8  7
2  1  3  6			
			]]>
			</screen>
		</section>
		<section>
			<title>数据去重</title>
			<programlisting>
			<![CDATA[
df.drop_duplicates(['姓名'],inplace=True)			
			]]>
			</programlisting>
		</section>
		<section>
			<title></title>
			<programlisting>
			<![CDATA[
df['创建时间'] = df['创建时间'].dt.strftime('%Y-%m-%d')			
			]]>
			</programlisting>
		</section>

	</section>
	<section>
		<title>数据可视化</title>
	</section>
	<section>
		<title>FAQ</title>
		<section>
			<title>xlrd.biffh.XLRDError: Excel xlsx file; not supported</title>
			<screen>
			<![CDATA[
neo@MacBook-Pro-Neo ~ % pip show xlrd
Name: xlrd
Version: 2.0.1
Summary: Library for developers to extract data from Microsoft Excel (tm) .xls spreadsheet files
Home-page: http://www.python-excel.org/
Author: Chris Withers
Author-email: chris@withers.org
License: BSD
Location: /Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages
Requires: 
Required-by: 			
			]]>
			</screen>
			<para>降级 xlrd 到 1.2.0 可以解决</para>
			<screen>
			<![CDATA[
pip uninstall xlrd
pip install xlrd==1.2.0			
			]]>
			</screen>
		</section>
		<section>
			<title>Missing optional dependency 'xlrd'</title>
			<para>提示错误</para>
			<screen>
		<![CDATA[
ImportError: Missing optional dependency 'xlrd'. Install xlrd >= 1.0.0 for Excel support Use pip or conda to install xlrd.		
		]]>
			</screen>
			<para>解决方案</para>
			<screen>
			<![CDATA[
neo@MacBook-Pro-Neo ~/workspace/netkiller-project % pip3 install openpyxl
Collecting openpyxl
  Downloading openpyxl-3.0.7-py2.py3-none-any.whl (243 kB)
     |████████████████████████████████| 243 kB 2.2 MB/s 
Collecting et-xmlfile
  Using cached et_xmlfile-1.0.1.tar.gz (8.4 kB)
Building wheels for collected packages: et-xmlfile
  Building wheel for et-xmlfile (setup.py) ... done
  Created wheel for et-xmlfile: filename=et_xmlfile-1.0.1-py3-none-any.whl size=8913 sha256=a4c964230c25014b55de927ac9284d184e6c729edf6f414cba97f3d94d3023aa
  Stored in directory: /Users/neo/Library/Caches/pip/wheels/bb/9b/ff/8fdf015c95a57224237bf88fbb9e45237cbe8177213bc13732
Successfully built et-xmlfile
Installing collected packages: et-xmlfile, openpyxl
Successfully installed et-xmlfile-1.0.1 openpyxl-3.0.7			
			]]>
			</screen>
		</section>
	</section>
</chapter>