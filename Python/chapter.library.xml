<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: chapter.library.xml 661 2013-08-12 10:24:47Z netkiller $ -->
<chapter id="index">
	<?dbhtml dir="library"?>
	<title>Library</title>
	<section>
		<title>序列化</title>
		<programlisting>
		<![CDATA[ 
import shelve

with shelve.open("/var/tmp/test") as db:
	db["hello"] = "helloworld"

with shelve.open("/var/tmp/test") as db:
	for k, v in db.items():
		print(k, ":", v)		
		]]>
		</programlisting>
		<programlisting>
		<![CDATA[ 
import shelve, json

data = json.loads(json.dumps({"800": "AAAA", "900": "BBBB", "1000": "CCCC"}))
print(data, type(data))
with shelve.open("/var/tmp/test", "n") as db:
	for k, v in data.items():
		db[k] = v

with shelve.open("/var/tmp/test") as db:
	for k, v in db.items():
		print(k, ":", v)
		]]>
		</programlisting>
	</section>
	<section>
		<title>队列</title>
		<programlisting>
		<![CDATA[ 
import queue

q = queue.SimpleQueue()

for n in range(10):
	q.put(n)

print("队列数量:", q.qsize())

while not q.empty():
	print(q.get())

print("队列状态：", q.empty())
			]]>
		</programlisting>
		<para>先进先出队列，保持队列最大尺寸，超过尺寸自动出队</para>
		<programlisting>
		<![CDATA[ 
from queue import Queue

q = Queue(maxsize=3)

for i in range(10):
	if q.full():
		q.get()
	q.put(i, block=False)


print(type(q.queue), q.queue)

while not q.empty():
	i = q.get(block=False)
	print(i)		
		]]>
		</programlisting>
		<programlisting>
		<![CDATA[ 
from queue import Queue

q = Queue(maxsize=10)

for i in range(20):
	if q.full():
		q.get()
	q.put(i, block=False)


print(type(q.queue), q.queue)

for n in range(5):
	if not q.empty():
		i = q.get(block=False)
		print(i)		
		]]>
		</programlisting>
	</section> &section.library.random.xml; &section.library.threading.xml; &section.library.syslog.xml; &section.library.socket.xml; &section.library.process.xml; &section.library.yaml.xml; &section.library.daemon.xml; <section id="python-memcached">
		<title>python-memcached</title>
		<link linkend="python">参考Python安装</link>
		<screen>
		<![CDATA[
wget ftp://ftp.tummy.com/pub/python-memcached/python-memcached-1.34.tar.gz
tar zxvf python-memcached-1.34.tar.gz
cd python-memcached-1.34
		]]>
		</screen>
		<para># python setup.py install</para>
		<screen>
		<![CDATA[
running install
running build
running build_py
creating build
creating build/lib
copying memcache.py -> build/lib
running install_lib
copying build/lib/memcache.py -> /usr/lib/python2.3/site-packages
byte-compiling /usr/lib/python2.3/site-packages/memcache.py to memcache.pyc
		]]>
		</screen>
		<example>
			<title>memcached.py</title>
			<screen>
			<![CDATA[
import memcache
mc = memcache.Client(['127.0.0.1:11211'], debug=1)

mc.set("some_key", "Some value")
value = mc.get("some_key")
print value

mc.set("another_key", 3)
mc.delete("another_key")

mc.set("key", "1")   # note that the key used for incr/decr must be a string.
mc.incr("key")
mc.decr("key")
			]]>
			</screen>
		</example>
	</section>
	<section id="pyro">
		<title>Pyro - Pyro is short for PYthon Remote Objects</title>
		<para>http://pyro.sourceforge.net/</para>
	</section>
	<section id="python-imaging">
		<title>Python Imaging Library</title>
		<para>Debian/Ubuntu</para>
		<screen>
		<![CDATA[
sudo apt-get install libjpeg62-dev
sudo apt-get install python-imaging
		]]>
		</screen>
		<para>采用源码安装</para>
		<screen>
		<![CDATA[
tar zxvf Imaging-1.1.6.tar.gz
cd Imaging-1.1.6/
		]]>
		</screen>
		<command>sudo python setup.py install</command>
		<note>
			<title>decoder jpeg not available</title>
			<para>首先确认jpeg库是否安装</para>
			<para>find / -name jpeglib.h</para>
			<para>然后修改头文件</para>
			<para>Imaging-1.1.6/libImaging</para>
			<para>修改Jpeg.h, #include "jpeglib.h" 改为</para>
			<para>#include "/usr/include/jpeglib.h"</para>
		</note>
	</section>
	<section id="getopt">
		<title>getopt – Command line option parsing</title>
	</section> &section.library.syslog.xml; <section id="python-subversion">
		<title>python-subversion</title>
		<screen>
	<![CDATA[
$ sudo apt-get install python-subversion
	]]>
	</screen>
		<screen>
	<![CDATA[
$ dpkg -L python-subversion
/.
/usr
/usr/share
/usr/share/python-support
/usr/share/python-support/python-subversion.public
/usr/share/doc
/usr/share/doc/python-subversion
/usr/share/doc/python-subversion/examples
/usr/share/doc/python-subversion/examples/svnlook.py.gz
/usr/share/doc/python-subversion/examples/dumpprops.py
/usr/share/doc/python-subversion/examples/blame.py
/usr/share/doc/python-subversion/examples/svnshell.py.gz
/usr/share/doc/python-subversion/examples/revplist.py
/usr/share/doc/python-subversion/examples/putfile.py
/usr/share/doc/python-subversion/examples/getfile.py
/usr/share/doc/python-subversion/examples/check-modified.py
/usr/share/doc/python-subversion/examples/get-location-segments.py
/usr/share/doc/python-subversion/examples/geturl.py
/usr/share/doc/python-subversion/changelog.gz
/usr/share/doc/python-subversion/copyright
/usr/share/doc/python-subversion/changelog.Debian.gz
/usr/share/doc/python-subversion/README.Debian
/usr/share/lintian
/usr/share/lintian/overrides
/usr/share/lintian/overrides/python-subversion
/usr/share/pyshared
/usr/share/pyshared/libsvn
/usr/share/pyshared/libsvn/delta.py
/usr/share/pyshared/libsvn/client.py
/usr/share/pyshared/libsvn/core.py
/usr/share/pyshared/libsvn/ra.py
/usr/share/pyshared/libsvn/fs.py
/usr/share/pyshared/libsvn/wc.py
/usr/share/pyshared/libsvn/__init__.py
/usr/share/pyshared/libsvn/repos.py
/usr/share/pyshared/libsvn/diff.py
/usr/share/pyshared/svn
/usr/share/pyshared/svn/delta.py
/usr/share/pyshared/svn/client.py
/usr/share/pyshared/svn/core.py
/usr/share/pyshared/svn/ra.py
/usr/share/pyshared/svn/fs.py
/usr/share/pyshared/svn/wc.py
/usr/share/pyshared/svn/__init__.py
/usr/share/pyshared/svn/repos.py
/usr/share/pyshared/svn/diff.py
/usr/bin
/usr/bin/svnshell
/usr/lib
/usr/lib/libsvn_swig_py2.6-1.so.1.0.0
/usr/lib/pyshared
/usr/lib/pyshared/python2.6
/usr/lib/pyshared/python2.6/libsvn
/usr/lib/pyshared/python2.6/libsvn/_delta.so
/usr/lib/pyshared/python2.6/libsvn/_repos.so
/usr/lib/pyshared/python2.6/libsvn/_fs.so
/usr/lib/pyshared/python2.6/libsvn/_client.so
/usr/lib/pyshared/python2.6/libsvn/_core.so
/usr/lib/pyshared/python2.6/libsvn/_diff.so
/usr/lib/pyshared/python2.6/libsvn/_wc.so
/usr/lib/pyshared/python2.6/libsvn/_ra.so
/usr/lib/libsvn_swig_py2.6-1.so.1
	]]>
	</screen>
	</section>
	<section id="simplehttpserver">
		<title>SimpleHTTPServer</title>
		<example>
			<title>SimpleHTTPServer</title>
			<screen>
			<![CDATA[
python -m SimpleHTTPServer &
			]]>
			</screen>
			<screen>
			<![CDATA[
curl http://localhost:8000/
			]]>
			</screen>
		</example>
	</section>
<section id="fuse-python">
		<title>fuse-python.x86_64 : Python bindings for FUSE - filesystem in userspace</title>

	</section>

<section id="python.network">
		<title>Network</title>
		<section id="gevent">
			<title>gevent - A coroutine-based network library for Python</title>
			<para>http://www.gevent.org/</para>
		</section>
	</section>
	
<section id="python-spdylay">
		<title>Python-spdylay - Spdylay Python Extension Module</title>
		<para>
			<ulink url="http://spdylay.sourceforge.net/" />
		</para>
	</section>	
<section id="mechanize">
		<title>mechanize</title>
		<para>
			<ulink url="http://wwwsearch.sourceforge.net/mechanize/" />
		</para>
		<para>Ubuntu</para>
		<screen>
	<![CDATA[
$ sudo apt-get install python-mechanize
	]]>
	</screen>
		<para>Pip</para>
		<screen>
	<![CDATA[
$ sudo pip install mechanize	
	]]>
	</screen>
		<para>Python 3</para>
		<screen>
	<![CDATA[
git clone https://github.com/adevore/mechanize.git	
cd mechanize/
git checkout python3
	]]>
	</screen>
	</section>
	<section id="Dominate">
		<title>Dominate</title>
		<para>Dominate is a Python library for creating and manipulating HTML documents using an elegant DOM API. It allows you to write HTML pages in pure Python very concisely, which eliminates the need to learn another template language, and lets you take advantage of the more powerful features of Python.</para>
		<para>https://pypi.org/project/dominate/</para>
		<screen>
	<![CDATA[
pip install dominate
	]]>
	</screen>
		<programlisting>
	<![CDATA[
	
	]]>
	</programlisting>
	</section>
	&section.library.other.xml;
</chapter>