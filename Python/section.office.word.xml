<?xml version="1.0" encoding="UTF-8"?>
<section id="word">
	<title>Word 文字处理</title>
	<para>Python-docx 是一款针对于word文档处理的一个模块，它可以创建word文档，遍历word文档，以及修改word文档。</para>
	<para>主要应用场景是文档生成，文档转换，文档分析等等。</para>
	<section>
		<title>安装 </title>
		<screen>
		<![CDATA[
pip3 install python-docx
		]]>
		</screen>
	</section>
	<section>
		<title>创建空白文档</title>
		<programlisting>
		<![CDATA[
from docx import Document
document = Document()
document.save('new.docx')		
		]]>
		</programlisting>
	</section>
	<section>
		<title>演示</title>
		<programlisting>
		<![CDATA[
from docx import Document

# 打开已存在文档
document = Document('test.docx')

# 读取标题、段落、列表内容
paras = [ paragraph.text for paragraph in document.paragraphs]
for p in paras:
    print(p)

# 读取表格内容
tables = [table for table in document.tables]
for t in tables:
    for row in t.rows:
        for cell in row.cells:
            print(cell.text, end=' ')
        print()		
		]]>
		</programlisting>
	</section>
	<section>
		<title>添加标题</title>
		<programlisting>
		<![CDATA[
from docx import Document

# 创建文档对象
document = Document()

# 标题
document.add_heading('标题一', 0)
document.add_heading('标题二', 1)
document.add_heading('标题三', 2)
document.add_heading('标题四', 3)
document.add_heading('标题五', 4)
document.add_heading('标题六', 5)
document.add_heading('标题七', 6)
document.add_heading('标题八', 7)
document.add_heading('标题九', 8)
document.add_heading('标题十', 9)

# 保存 word 文档
document.save('heading.docx')
		]]>
		</programlisting>
		<para>设置对齐</para>
		<programlisting>
		<![CDATA[
from docx import Document
from docx.enum.text import WD_ALIGN_PARAGRAPH, WD_LINE_SPACING

document = Document()
head = document.add_heading('Netkiller Python 手札', level=0)
head.alignment = WD_ALIGN_PARAGRAPH.CENTER  # 居中

document.add_heading('Python 入门', 1)
document.add_heading('安装 Python 运行环境', 2)
document.add_heading('Python 语法', 1)
document.add_heading('if 判断', 2)
document.add_heading('for 循环', 2)

document.save('Netkiller Python 手札.docx')
		]]>
		</programlisting>
		<para>设置字体大小</para>
		<programlisting>
		<![CDATA[
from docx.enum.text import WD_ALIGN_PARAGRAPH,WD_LINE_SPACING
head = document.add_heading('level=1') #添加一级标题
run = head.add_run('这是标题')
run.font.size = Pt(24)
head.alignment = WD_ALIGN_PARAGRAPH.CENTER #居中		
		]]>
		</programlisting>
	</section>
	<section>
		<title>添加段落</title>
		<programlisting>
		<![CDATA[
from docx import Document

# 创建文档对象
document = Document()

# 添加标题
document.add_heading('什么是多维度架构', 0)
document.add_heading('架构师的大局观', 1)
# 添加段落
document.add_paragraph(
    '我们从小的教育就是如何拆分问题、解决问题，这样做显然会使复杂的问题变得更容易些。但是这带来一个新问题，我们丧失了如何从宏观角度看问题，分析问题，解决问题，对更大的整体的内在领悟能力。这导致了我们对现有问题提出的解决方案，但无法预计实施该方案后产生的各种后果，为此我们付出了巨大代价。')
document.add_paragraph('而我们试图考虑大局的时候，总要在脑子里重新排序，组合哪些拆分出来问题，给它们编组列单。'
                       '习惯性认为解决了所有微观领域的问题，那么宏观上问题就得到了解决。'
                       '然而，这种做法是徒劳无益的，就好比试图通过重新拼起来的碎镜子来观察真实的影像。')
document.add_paragraph('所以在一段时间后，我们便干脆完全放弃了对整体的关注。')

document.add_heading('面临的问题', 2)

document.add_paragraph(
    '当今的社会，几乎所有的企业情况都是岗位职责清晰，分工明确，员工是企业机器上的一颗螺丝钉，我们在招聘下属的时候也仅仅是用他的一技之长。项目一旦立项，我们就根据项目需求针对性性的招聘，短短半年团队就会膨胀数倍，但效率并不是成正比增长。另一个问题是这个庞大的团队合作起来并不尽人意。结果是 80 % 协调的时间，20 % 实际工作时间。')

# 保存文档
document.save('paragraph.docx')		
		]]>
		</programlisting>
		<para>插入段落</para>
		<programlisting>
		<![CDATA[
paragraph = document.add_paragraph('明天去上班。')
在此段落之前插入一个段落，如下：
pre_paragraph = paragraph.insert_paragraph_before('今天休息。')		
		]]>
		</programlisting>
		<para>段落对齐</para>
		<programlisting>
		<![CDATA[
paragraph = document.add_paragraph("段落对齐方式")
paragraph_format = paragraph.paragraph_format
paragraph_format.alignment = WD_ALIGN_PARAGRAPH.CENTER		
		]]>
		</programlisting>
		<para>段落缩进设置</para>
		<programlisting>
		<![CDATA[
from docx.shared import Inches

paragraph = document.add_paragraph("段落缩进")
paragraph_format = paragraph.paragraph_format
paragraph_format.left_indent = Inches(0.5)		
		]]>
		</programlisting>
		<para>首行缩进：</para>
		<programlisting>
		<![CDATA[
paragraph_format.first_line_indent = Inches(-0.25)		
		]]>
		</programlisting>
	</section>
	<section>
		<title>列表</title>
		<programlisting>
		<![CDATA[
from docx import Document

# 创建文档
document = Document()

# 添加标题
document.add_heading('Linux', 0)
document.add_heading('桌面发行版', 1)

# 添加列表
document.add_heading('Desktop: ', 2)
document.add_paragraph('Ubuntu', style='List Bullet')
document.add_paragraph('Debian', style='List Bullet')
document.add_paragraph('Fedora', style='List Bullet')

# 保存文档
document.save('list.docx')		
		]]>
		</programlisting>
	</section>
	<section>
		<title>表格</title>
		<programlisting>
		<![CDATA[
from docx import Document

document = Document()

document.add_heading('表格演示', 1)

# 表格
table = document.add_table(rows=3, cols=2, style='Table Grid')

# 表头
thead = table.rows[0].cells
thead[0].text = '姓名'
thead[1].text = '年龄'

# 表体
tbody = table.rows[1].cells
tbody[0].text = 'Neo'
tbody[1].text = '22'

tbody = table.rows[2].cells
tbody[0].text = 'Jam'
tbody[1].text = '33'

document.add_paragraph('2020年4月8日 netkiller 制表')
# 保存
document.save('table.docx')
		
		]]>
		</programlisting>
	</section>
	<section>
		<title>添加图片</title>
		<programlisting>
		<![CDATA[
document.add_picture('demo.png')
		]]>
		</programlisting>
		<para>指定图片宽度，高度会自适应</para>
		<programlisting>
		<![CDATA[
# 图片
document.add_picture('pic.jpg', width=Inches(1))		
		]]>
		</programlisting>
		<para>指定图片宽度和高度</para>
		<programlisting>
		<![CDATA[
from docx.shared import Inches
document.add_picture('demo.png', width=Inches(1.0), height=Inches(1.0))
		]]>
		</programlisting>
	</section>
	<section>
		<title>强制分页</title>
		<programlisting>
		<![CDATA[
# 分页
# document.add_page_break()		
		]]>
		</programlisting>
	</section>
	<section>
		<title>样式</title>
		<section>
			<title>标题居中</title>
			<programlisting>
		<![CDATA[
style = document.styles['Normal']
# 标题
h0 = document.add_heading('标题0', 0)
# 居中
h0.alignment = WD_PARAGRAPH_ALIGNMENT.CENTER
		]]>
			</programlisting>
		</section>
		<section>
			<title>首行缩进</title>
			<programlisting>
			<![CDATA[
# 首行缩进两个字符
paragraph_format = style.paragraph_format
paragraph_format.first_line_indent = Cm(0.74)			
			]]>
			</programlisting>
		</section>
		<section>
			<title>粗体，斜体</title>
			<programlisting>
			<![CDATA[
# 段落
p1 = document.add_paragraph('样式演示')
# 字体加粗
p1.add_run('字体加粗').bold = True
# 斜体
p1.add_run('设置斜体').italic = True			
			]]>
			</programlisting>
		</section>
		<section>
			<title>字体大小</title>
			<programlisting>
			<![CDATA[
p2 = document.add_paragraph('正常尺寸')
run = p2.add_run('设置字体大小12Pt ')
# 设置字体大小
run.font.size = Pt(12)			
			]]>
			</programlisting>
		</section>
		<section>
			<title>样式演示</title>
			<programlisting>
			<![CDATA[
from docx import Document
from docx.shared import Inches
from docx.enum.text import WD_PARAGRAPH_ALIGNMENT
from docx.shared import Cm, Pt

# 创建文档
document = Document()
style = document.styles['Normal']
document.add_heading('标题剧中', 1)
# 首行缩进两个字符
paragraph_format = style.paragraph_format
paragraph_format.first_line_indent = Cm(0.74)
# 段落
p1 = document.add_paragraph(
    '我们从小的教育就是如何拆分问题、解决问题，这样做显然会使复杂的问题变得更容易些。')
# 加粗
p1.add_run('但是这带来一个新问题，我们丧失了如何从宏观角度看问题，分析问题，解决问题，对更大的整体的内在领悟能力。').bold = True
# 斜体
p1.add_run('这导致了我们对现有问题提出的解决方案，但无法预计实施该方案后产生的各种后果，为此我们付出了巨大代价。').italic = True

# 段落
p2 = document.add_paragraph('所以在一段时间后，')
# 字体大小
p2.add_run('我们便干脆完全放弃了对整体的关注。').font.size = Pt(40)

document.save('test.docx')
			
			]]>
			</programlisting>
		</section>

	</section>
</section>