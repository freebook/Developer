<?xml version="1.0" encoding="UTF-8"?>
<section id="container">
	<title>容器</title>
	<para>Flask 是一个轻量级Web应用框架，简单易用，可以很快速地创建web应用。我们用它来创建一个demo应用。</para>
	<para>如果还没有安装Flask库，可以使用下面命令安装:</para>
	<screen>
	<![CDATA[
$ pip install flask	
	]]>
	</screen>
	<para>创建 flask 项目</para>
	<para>安装成功后，新建一个命名为flask的目录</para>
	<screen>
	<![CDATA[
cd workspace/python 
mkdir flask
cd flask 
	]]>
	</screen>
	<para>然后在该目录下创建app.py文件。</para>
	<screen>
	<![CDATA[
from flask import Flask

app = Flask(__name__)

@app.route("/")
def index():  
  return """
  <h1>《Netkiller Python 手札》</h1>
  <p>这是一个运行在 Docker 容器中的演示程序.</p>
  """

if __name__ == "__main__":  
    app.run(debug=True, host='0.0.0.0')	
	]]>
	</screen>
	<para>运行项目</para>
	<screen>
	<![CDATA[
➜  flask git:(master) ✗ python3 app.py                        
 * Serving Flask app 'app' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: on
 * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
 * Running on http://192.168.3.2:5000/ (Press CTRL+C to quit)
 * Restarting with watchdog (fsevents)
 * Debugger is active!
 * Debugger PIN: 211-304-394	
	]]>
	</screen>
	<para>然后在浏览器中访问 http://localhost:5000/ 确认 flask 可以正常运行。</para>
	<screen>
	<![CDATA[
➜  python git:(master) ✗ curl http://localhost:5000

  <h1>《Netkiller Python 手札》</h1>
  <p>这是一个运行在 Docker 容器中的演示程序.</p>	
	]]>
	</screen>
	<section>
		<title>在 Docker 容器中运行 Python 项目</title>
		<para>要在Docker上运行应用程序，首先必须使用 Dockerfile 脚本构建一个容器，而且必须包含使用的所有依赖项，包括 python 和 依赖库。</para>
		<para>新建一个 requirements.txt 文件，包含所有依赖的 python 包，我们的例子中只有一个 Flask。</para>
		<screen>
		<![CDATA[
flask==2.0.1		
		]]>
		</screen>
		<para>创建 Dockerfile 文件用来构建映像</para>
		<programlisting>
		<![CDATA[
FROM python

LABEL org.opencontainers.image.authors="netkiller@msn.com"

WORKDIR /

COPY ./requirements.txt /requirements.txt

RUN pip install --no-cache-dir -r requirements.txt

COPY . /

ENTRYPOINT [ "python" ]

CMD [ "app.py" ]
		]]>
		</programlisting>
		<para>构建镜像</para>
		<screen>
		<![CDATA[
docker build -t flask:0.0.1 .
		]]>
		</screen>
		<para>启动容器</para>
		<screen>
		<![CDATA[
docker run --name flask -p 5000:5000 flask:0.0.1		
		]]>
		</screen>
	</section>
</section>







