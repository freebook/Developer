<?xml version="1.0" encoding="UTF-8"?>
<section id="python.install">
	<title>Python 安装</title>
	<section id="python.install.docker">
		<title>Docker 安装</title>
		<screen>
		<![CDATA[
$ docker run --name python --rm -it python
Python 3.10.1 (main, Dec 21 2021, 09:01:08) [GCC 10.2.1 20210110] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>>		
		]]>
		</screen>
		<para>Dockerfile 制作自己的镜像</para>
		<screen>
		<![CDATA[
FROM python:latest

MAINTAINER Netkiller <netkiller@msn.com>

RUN pip install pymysql sqlalchemy openpyxl pandas -i https://pypi.tuna.tsinghua.edu.cn/simple
RUN mkdir /data
ADD export.py /srv
VOLUME ["/tmp"]
WORKDIR /data
#EXPOSE 80 443
ENTRYPOINT python3 /srv/export.py
		]]>
		</screen>
	</section>
	<section id="python3.dnf">
		<title>dnf 安装 python3.11</title>
		<para>安装 Python 3.11 适用鱼 Rocky Linux 9.2 和 AlmaLinux 9.2</para>
		<screen>
		<![CDATA[
dnf install -y python3.11 python3.11-pip		
		]]>
		</screen>
		<para>系统默认是 python3.9，将其切换到 python3.11</para>
		<screen>
		<![CDATA[

update-alternatives --install /usr/bin/python python /usr/bin/python3.11 1
update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.11 2
		]]>
		</screen>
		<para>切换 pip 到 3.11</para>
		<screen>
		<![CDATA[
[root@iZwz9cug5b7jbx1dc4nwniZ ~]# mv /usr/bin/pip{,.backup}
[root@iZwz9cug5b7jbx1dc4nwniZ ~]# mv /usr/bin/pip3{,.backup}
[root@iZwz9cug5b7jbx1dc4nwniZ ~]# alternatives --install /usr/bin/pip pip /usr/bin/pip3.11 1
[root@iZwz9cug5b7jbx1dc4nwniZ ~]# alternatives --install /usr/bin/pip3 pip3 /usr/bin/pip3.11 2
[root@iZwz9cug5b7jbx1dc4nwniZ ~]# pip -V
pip 22.3.1 from /usr/lib/python3.11/site-packages/pip (python 3.11)
		]]>
		</screen>
		<para>检查 python 是否工作正常</para>
		<screen>
		<![CDATA[
[root@iZwz9cug5b7jbx1dc4nwniZ srv]# alternatives --list
libnssckbi.so.x86_64  	auto  	/usr/lib64/pkcs11/p11-kit-trust.so
soelim                	auto  	/usr/bin/soelim.groff
cifs-idmap-plugin     	auto  	/usr/lib64/cifs-utils/cifs_idmap_sss.so
iptables              	auto  	/usr/sbin/iptables-nft
ebtables              	auto  	/usr/sbin/ebtables-nft
arptables             	auto  	/usr/sbin/arptables-nft
ld                    	auto  	/usr/bin/ld.bfd
man                   	auto  	/usr/bin/man.man-db
nc                    	auto  	/usr/bin/ncat
man.7.gz              	auto  	/usr/share/man/man7/man.man-pages.7.gz
libwbclient.so.0.15-64	auto  	/usr/lib64/samba/wbclient/libwbclient.so.0.15
python                	auto  	/usr/bin/python3.11

[root@iZwz9cug5b7jbx1dc4nwniZ srv]# alternatives --display python
python - status is auto.
 link currently points to /usr/bin/python3.11
/usr/bin/python3.11 - priority 1
Current `best' version is /usr/bin/python3.11.

[root@iZwz9cug5b7jbx1dc4nwniZ srv]# python
Python 3.11.2 (main, May 24 2023, 00:00:00) [GCC 11.3.1 20221121 (Red Hat 11.3.1-4)] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>>
		]]>
		</screen>
	</section>
	<section>
		<title>编译安装 Python3.x</title>
		<screen>
			<![CDATA[
./configure --prefix=/usr/local/python-3.1.2
make && make install
			]]>
		</screen>
	</section>
	<section>
		<title>Ubunut 13.04 环境安装python3</title>
		<screen><![CDATA[
$ sudo apt-get install python3
			]]></screen>
		<para>python 3.3</para>
		<screen><![CDATA[
$ sudo apt-get install python3.3
			]]></screen>
	</section>
	<section id="pypy">
		<title>pypy - fast alternative implementation of Python - PyPy
			interpreter
		</title>
		<para>http://pypy.org/</para>
		<section>
			<title>Ubuntu 环境安装</title>
			<screen>
		<![CDATA[
$ apt-cache search pypy | grep pypy
pypy - fast alternative implementation of Python - PyPy interpreter
pypy-dev - header files for PyPy (an alternative Python interpreter)
pypy-doc - developer Documentation for PyPy (an alternative Python interpreter)
pypy-lib - standard library for PyPy (an alternative Python interpreter)
python-pypy.translator.sandbox - sandboxed PyPy interpreter
		]]>
			</screen>
			<screen>
		<![CDATA[
$ sudo apt-get install pypy
		]]>
			</screen>
		</section>
		<section>
			<title>CentOS 环境安装</title>
			<screen>
		<![CDATA[
# yum install pypy
		]]>
			</screen>
		</section>
	</section>
	<section id="eric">
		<title>Eric Python IDE</title>
		<screen><![CDATA[
apt-get install eric
		]]></screen>
	</section>
	<section id="exe">
		<title>python to exe</title>
		<section id="pyinstaller">
			<title>pyinstaller</title>
			<para>http://www.pyinstaller.org/</para>
			<section>
				<title>Linux</title>
				<para>安装</para>
				<screen><![CDATA[
pip install pyinstaller
			]]></screen>
				<para>制作EXE文件</para>
				<screen><![CDATA[
$ pyinstaller test.py
			]]></screen>
				<para>dist目录下会生成可执行文件</para>
			</section>
		</section>
		<section id="py2exe">
			<title>py2exe</title>
			<para>http://www.py2exe.org/</para>
			<para>此软件 2008-11-16 后不再更新</para>
		</section>

	</section>
	<section id="python2">
		<title>Python2.x</title>
		<section>
			<title>编译安装</title>
			<para>Python2.x</para>
			<screen><![CDATA[
wget http://www.python.org/ftp/python/2.x.x/Python-2.x.x.tgz
tar zxvf Python-2.x.x.tgz
cd Python-2.x.x
./configure --prefix=/usr/local/python2.x
make
make install

ln -s /usr/local/python/bin/python2.5 /usr/bin/
ln -s /usr/local/python/bin/* /usr/local/bin/
			]]></screen>
		</section>
		<section>
			<title>Ubuntu 安装</title>
			<screen><![CDATA[
sudo apt-get install python
sudo apt-get install python-setuptools
			]]></screen>
		</section>
	</section>
</section>
<section id="venv">
	<title>venv - Python 虚拟环境</title>
	<section>
		<title>Linux 建立虚拟环境</title>
		<screen>
		<![CDATA[
python3 -m venv /srv/python		
		]]>
		</screen>
		<para>设置 python 版本</para>
		<screen>
		<![CDATA[
root@debian:~# update-alternatives --install /usr/bin/python python /srv/python/bin/python 1
		]]>
		</screen>
	</section>
	<section>
		<title>苹果电脑 Z Shell 建立虚拟环境</title>
		<para>初始化环境</para>
		<screen>
		<![CDATA[
neo@Netkiller-Mac-mini-M4 netkiller % python3 -m venv .venv
		]]>
		</screen>
	</section>
	<section>
		<title>苹果电脑 fish Shell 建立虚拟环境</title>
		<para>我使用的是 fish shell</para>
		<screen>
			<![CDATA[
neo@Netkiller-Mac-mini-M4 netkiller % fish
Welcome to fish, the friendly interactive shell
Type help for instructions on how to use fish		
			]]>
		</screen>
		<para>切换到 venv 环境</para>
		<screen>
			<![CDATA[
neo@Netkiller-Mac-mini-M4 ~/P/netkiller (yolo)> python3 -m venv .venv	
neo@Netkiller-Mac-mini-M4 ~/P/netkiller (yolo)> source .venv/bin/activate.fish 
(.venv) neo@Neo-Mac-mini-M4 ~/P/netkiller (yolo)> 		
			]]>
		</screen>
		<para>推出 venv 环境</para>
		<screen>
		<![CDATA[
(.venv) neo@Netkiller-Mac-mini-M4 ~/P/netkiller (yolo)> deactivate
neo@Netkiller-Mac-mini-M4 ~/P/netkiller (yolo)> 		
		]]>
		</screen>
	</section>
	<section>
		<title>进入虚拟环境</title>
		<screen>
		<![CDATA[
source .venv/bin/activate		
		]]>
		</screen>
	</section>
	<section>
		<title>退出虚拟环境</title>
		<programlisting>
		<![CDATA[
root@debian:~# deactivate
		]]>
		</programlisting>
	</section>
</section>