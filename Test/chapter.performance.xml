<?xml version="1.0" encoding="UTF-8"?>
<!-- $Id: chapter.performance.xml 470 2012-10-22 03:33:43Z netkiller $ -->
<part id="index"><?dbhtml dir="performance"?>
	<title>Web 压力测试工具</title>
	<chapter id="stress">
		<title>TCP/IP 压力测试优化</title>
		<screen>
		<![CDATA[
cat >> /etc/security/limits.conf <<EOF
root 	soft nofile 40960
root 	hard nofile 65536
nobody 	soft nofile 40960
nobody 	hard nofile 65536
nginx 	soft nofile 40960
nginx 	hard nofile 65536
EOF

cat >> /etc/security/limits.conf <<EOF
* 	soft nofile 1050000
* 	hard nofile 1050000
EOF

cat >> /etc/sysctl.conf <<EOF
net.core.rmem_default = 10000000
net.core.rmem_max = 32949076
net.core.wmem_default = 10000000
net.core.wmem_max = 32949076
net.core.optmem_max = 32949076
net.core.somaxconn = 1024

net.ipv4.ip_local_port_range = 1024 65500
net.ipv4.tcp_sack = 0
net.ipv4.tcp_syncookies = 0
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_fin_timeout = 60
net.ipv4.tcp_keepalive_time = 1200
net.ipv4.tcp_max_syn_backlog = 8192
net.ipv4.tcp_max_tw_buckets = 10240
EOF
/sbin/sysctl -p
		]]>
		</screen>
		<para>net.ipv4.tcp_syncookies = 0必须禁用</para>
		<para>net.ipv4.tcp_max_tw_buckets 尽可能大，增加TIME_WAIT列队长度</para>
		<para>如果是WEB服务器,开启状态监视</para>
		<screen>
location /nginx_status {
  stub_status on;
  access_log  on;
}
		</screen>
		<para>测试客户端</para>
		<screen>
		<![CDATA[
cat >> /etc/security/limits.conf <<EOF
nginx 	soft nofile 1000000
nginx 	hard nofile 1000000
EOF

or

ulimit -SHn 1090000
		]]>
		</screen>
		<para>观察TCP状态</para>
		<screen>
# cat tcp.sh
netstat -n | awk '/^tcp/ {++state[$NF]} END {for(key in state) print key,"\t",state[key]}'

# watch ./tcp.sh
		</screen>
	</chapter>
	<chapter id="apachebench">
		<title>ApacheBench</title>
		<para>按照Apache Bench</para>
		<screen>
yum install -y httpd-tools		
		</screen>
		<screen>
ab -n 20000 -c 20000 http://172.16.0.8/
ab -n 2000000 -c 20000 -t 30 -H 'Accept-Encoding: gzip' -k http://172.16.0.2/
		</screen>
		<para>循环请求</para>
		<screen>
		<![CDATA[
while true; do ab -n 10000 -c 10000 -t 30 -H 'Accept-Encoding: gzip' -k http://172.16.0.2/ && sleep 5; done
        ]]>
		</screen>
		<section id="ab.post">
			<title>Post数据</title>
			<para>有些时候我们需要测试用户登录性能，而一般登录程序都采用POST方式提交数据。</para>
			<para>准备POST 文件 /home/neo/post.txt</para>
			<screen>
			<![CDATA[
$ cat /home/neo/post.txt

username=neo&password=chen
			]]>
			</screen>
			<para>使用-p引用文件</para>
			<screen>
			<![CDATA[
ab -n 2048 -c 2048 -p post.txt http://www.example.com/login.php
			]]>
			</screen>
		</section>
	</chapter>
	<chapter id="jmeter">
		<title>JMeter</title>
	</chapter>
	<chapter id="siege">
		<title>Siege</title>
		<para>http://www.joedog.org/index/siege-home</para>
		<para>Debian/Ubuntu</para>
		<screen>
neo@debian:~$ apt-cache search Siege
siege - Http regression testing and benchmarking utility

neo@debian:~$ sudo apt-get install siege
		</screen>
		<para>CentOS</para>
		<screen>
# yum install siege		
		</screen>
		<para>参数</para>
		<screen>
New configuration template added to /root/.siege
Run siege -C to view the current settings in that file
SIEGE 4.0.2
Usage: siege [options]
       siege [options] URL
       siege -g URL
Options:
  -V, --version             VERSION, prints the version number.
  -h, --help                HELP, prints this section.
  -C, --config              CONFIGURATION, show the current config.
  -v, --verbose             VERBOSE, prints notification to screen.
  -q, --quiet               QUIET turns verbose off and suppresses output.
  -g, --get                 GET, pull down HTTP headers and display the
                            transaction. Great for application debugging.
  -c, --concurrent=NUM      CONCURRENT users, default is 10
  -r, --reps=NUM            REPS, number of times to run the test.
  -t, --time=NUMm           TIMED testing where "m" is modifier S, M, or H
                            ex: --time=1H, one hour test.
  -d, --delay=NUM           Time DELAY, random delay before each requst
  -b, --benchmark           BENCHMARK: no delays between requests.
  -i, --internet            INTERNET user simulation, hits URLs randomly.
  -f, --file=FILE           FILE, select a specific URLS FILE.
  -R, --rc=FILE             RC, specify an siegerc file
  -l, --log[=FILE]          LOG to FILE. If FILE is not specified, the
                            default is used: PREFIX/var/siege.log
  -m, --mark="text"         MARK, mark the log file with a string.
                            between .001 and NUM. (NOT COUNTED IN STATS)
  -H, --header="text"       Add a header to request (can be many)
  -A, --user-agent="text"   Sets User-Agent in request
  -T, --content-type="text" Sets Content-Type in request

Copyright (C) 2016 by Jeffrey Fulmer, et al.
This is free software; see the source for copying conditions.
There is NO warranty; not even for MERCHANTABILITY or FITNESS
FOR A PARTICULAR PURPOSE.
		
		</screen>
		<para>.siegerc</para>
		<screen>
verbose = false
internet = true
benchmark = true
		</screen>
		<para>siege参数介绍</para>
		<itemizedlist>
			<title>参数</title>
			<listitem><para>-c, --concurrent=NUM 	并发用户量，默认为10</para></listitem>
			<listitem><para>-u, --url="URL" 		</para></listitem>
			<listitem><para>-i, --internet          INTERNET user simulation, hits the URLs randomly.</para></listitem>
			<listitem><para>-b, --benchmark         基准测试, signifies no delay for time testing.</para></listitem>
			<listitem><para>-t, --time=NUMm         持续时间，单位默认为分"m" 同样可以使用 S, M, 或 H 例如: --time=1H, 一小时.</para></listitem>
			<listitem><para>-r, --reps=NUM          REPS, number of times to run the test, default is 25</para></listitem>
			<listitem><para>-f, --file=FILE         FILE, url列表配置文件.</para></listitem>
		</itemizedlist>
		<itemizedlist>
			<title>参数</title>
			<listitem><para>Transactions 	总共完成了X次请求</para></listitem>
			<listitem><para>Availability	有效性</para></listitem>
			<listitem><para>Elapsed time	花费时间</para></listitem>
			<listitem><para>Data transferred传输数据X兆</para></listitem>
			<listitem><para>Response time	响应时间</para></listitem>
			<listitem><para>Transaction rate每秒传输率：次/每秒</para></listitem>
			<listitem><para>Throughput		每秒数据吞吐量</para></listitem>
			<listitem><para>Concurrency		实际并发</para></listitem>
			<listitem><para>Successful transactions	成功的传输</para></listitem>
			<listitem><para>Failed transactions		失败的传输</para></listitem>
			<listitem><para>Longest transaction		传输所花最长时间</para></listitem>
			<listitem><para>Shortest transaction	传输所花最短时间</para></listitem>
		</itemizedlist>
		<screen>
siege -c 1000 -d 30 http://172.16.0.8/
		</screen>
		<screen>
siege -c 1000 -r 50 -i -b -t 2 -d 30 -f test.txt

cat test.txt
http://172.16.0.2/index.html
http://172.16.0.2/list.html
http://172.16.0.2/product.html
http://172.16.0.2/login.html
		</screen>
	</chapter>
</part>

<chapter id="index"><?dbhtml dir="benchmark"?>
	<title>Test - System performance benchmark</title>
	<section id="sysbench">
		<title>SysBench</title>
		<para>处理器测试</para>
		<screen>
sysbench --test=cpu --cpu-max-prime=20000 run
多线程测试
sysbench --test=threads --num-threads=64 --thread-yields=100 --thread-locks=2 run
		</screen>
		<para>磁盘IO性能测试</para>
		<screen>
sysbench --test=fileio --num-threads=16 --file-total-size=3G --file-test-mode=rndrw prepare
sysbench --test=fileio --num-threads=16 --file-total-size=3G --file-test-mode=rndrw run
sysbench --test=fileio --num-threads=16 --file-total-size=3G --file-test-mode=rndrw cleanup
		</screen>
		<para>内存测试</para>
		<screen>
sysbench --test=memory --memory-block-size=8k --memory-total-size=4G run
		</screen>
		<para>MySQL OLTP 事务处理性能测试</para>
		<screen>
sysbench --test=oltp --mysql-table-engine=myisam --oltp-table-size=1000000 --mysql-socket=/tmp/mysql.sock --mysql-user=test --mysql-host=localhost --mysql-password=test prepare
sysbench --num-threads=8 --max-requests=1000000 --test=oltp --mysql-table-engine=innodb --oltp-table-size=10000000 --mysql-socket=/tmp/mysql.sock --mysql-user=root --mysql-host=localhost --mysql-password=xxxx --mysql-db=sbtest run
		</screen>
	</section>
	<section id="bandwidth">
		<title>Bandwidth: a memory bandwidth benchmark</title>
		<para> </para>
		<screen>
wget http://packages.sw.be/rpmforge-release/rpmforge-release-0.5.2-2.el5.rf.i386.rpm
rpm --import http://apt.sw.be/RPM-GPG-KEY.dag.txt
rpm -K rpmforge-release-0.5.2-2.el5.rf.*.rpm
rpm -i rpmforge-release-0.5.2-2.el5.rf.*.rpm

yum search bandwidth
yum install bandwidth
		</screen>
	</section>
	<section id="locust">
		<title>locust - An open source load testing tool.</title>
		<para>http://locust.io/</para>
	</section>
</chapter>

<chapter id="opensta">
	<title>OpenSTA(Open System Testing Architecture)</title>
</chapter>